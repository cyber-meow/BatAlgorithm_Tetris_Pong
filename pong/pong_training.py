# -*- coding: utf-8 -*-
"""
Created on Tue May 17 20:17:05 2016

@author: cyber
"""

from pong.pong_bot import *
from pong.pong_evalu import *
from pybrain.optimization.populationbased.ga import GA_new
from differential_evolution.DE_rand_1_bin import DE_adapte
import time

# réseaux neuron (5,7,1), interval = 1, PAD_HEIGHT, BALL_RADIUS normaux
def training1(param):
    return pong_evalu_seul().evalu(bot_neuron(7,param))

# interval = 2    
def training2(param):
    return pong_evalu_seul().evalu(bot_neuron(7,param),2)

'''
Pour obtenir le résultat de l'entrainement par ga
Pas emballé dans une fonction ou une classe car c'est plus pratique comme ça

GAa = GA_new(training1, numParameters= 50, populationSize= 20, 
   mutationProb= 0.2, elitism= True, _eliteSize= 1)
'''

'''
fichier = open("ga_30.txt","a")
for i in range(31):
    t0 = time.time()
    print(i+30)
    fichier.write(str(i+30)+"\n\n")
    res = GAa.learn(0)
    print(res)
    fichier.write(str(res)+"\n\n")
    i0 = max(range(20), key= lambda j:GAa.fitnesses[j])
    print((GAa.currentpop[i0],GAa.fitnesses[i0]))
    fichier.write(str((GAa.currentpop[i0],GAa.fitnesses[i0]))+"\n\n")        
    print(time.time()-t0)
    fichier.write(str(time.time()-t0)+"\n\n\n")
fichier.close()


DEa = DE_adapte(20,50,training1)

fichier = open("DE_30.txt","a")
for i in range(31):
    t0 = time.time()
    print(30)
    fichier.write(str(30)+"\n\n")
    res = DEa.optimize(1)
    print(res)
    fichier.write(str(res)+"\n\n")  
    print(time.time()-t0)
    fichier.write(str(time.time()-t0)+"\n\n\n")
fichier.close()
'''




DE_60 = array([ -4.93648793e+02,  -4.71867319e+02,  -7.62299574e+02,
        -3.45407230e+02,  -4.21186546e+01,   5.45213678e+01,
        -2.04210476e+02,  -1.51285148e+02,  -1.09253123e+01,
         3.10584924e+01,   2.14084374e+01,  -2.55747130e+02,
         3.64308214e+02,   9.06387917e+02,   4.42586848e+01,
         1.15242647e+01,  -2.10144419e+02,   5.86666827e+01,
        -1.10491167e+03,  -8.08418284e+02,  -1.36590029e+02,
        -4.16727944e+02,   6.50428966e+02,  -2.74802783e+02,
        -5.76962688e+02,  -1.43157612e+03,  -6.40599009e+00,
        -4.09102736e+02,   1.90883655e+03,   6.07665337e+02,
        -1.97773717e+01,   7.78166733e+02,  -1.53985829e+03,
         1.75349864e+02,   6.61632887e+03,   4.20036644e+01,
        -5.52184927e+01,  -5.51856812e+01,   2.65128728e+02,
         4.86594221e+02,   4.76537685e+01,   1.35886099e+01,
        -3.36929657e+02,  -3.50809415e+02,   5.23681415e+01,
         3.80707072e+01,   7.14231315e+00,   1.23165107e+03,
         4.23770800e+02,   3.84933484e+01])
b_de = bot_neuron(7,DE_60)

BA_30 = array([ -1.76272308e+00,  -1.43589233e+00,   3.24889533e+00,
         3.54834220e-01,   4.23540784e+00,   1.15708049e+00,
         1.04031527e+01,   2.67645292e+00,   9.91018434e-01,
         6.12987837e-01,   1.22727666e+00,   8.08805635e+00,
        -1.04532892e+00,   2.74862078e+00,   1.40225324e-01,
        -9.22723008e-01,   1.23517406e+00,   4.28932325e+00,
        -3.61842589e+00,   2.56833854e-01,  -3.94376073e+00,
         1.53679553e+00,  -9.87072653e-01,  -2.80740145e+00,
         1.25399255e+00,   1.13807500e+00,  -7.32525438e-01,
         2.98947224e+00,   1.68024305e+00,   3.14602582e-01,
        -2.24718130e+00,   5.85984824e-01,   4.32327039e+00,
         4.57290547e+00,   3.18780963e+00,   2.19639600e-01,
        -2.75214871e+00,   2.82393411e+00,   5.73928598e-01,
         5.35437938e-01,  -7.85355043e-01,   7.92873758e-01,
         3.81410123e+00,   2.22000986e+00,   3.47138249e+00,
         4.57307088e-01,  -6.56607674e+00,  -1.85013780e-03,
         2.50582964e-01,   1.30605387e+00])
b_ba = bot_neuron(7,BA_30)

GA_60 = array([-0.56396452,  1.4819488 ,  1.55326271,  0.50466019,  0.22792139,
        0.54583425,  0.51030519,  1.96055432, -1.43786511, -1.28414285,
        2.69031979,  1.47755749, -0.99820913,  1.32491343, -0.38483592,
       -0.59241092, -0.26729848, -1.09321612,  0.60339257,  2.21856454,
       -1.57096936, -0.39783814,  0.23984361,  1.00214913,  0.75117291,
        1.95579911,  3.02581074,  0.82361557,  0.05041573, -1.70604653,
       -0.98997807,  2.36767867,  3.40752258, -0.55305058,  1.08181207,
        1.81502161,  0.30006839, -0.54148419,  0.49710551,  0.9795829 ,
        3.93840398,  0.86371149,  2.30847516,  0.3359053 ,  2.88766162,
        0.29676847,  1.94120297, -3.09381701,  0.63000701, -0.58837781])
b_ga = bot_neuron(7,GA_60)


BA_2=array([ -0.19219932,   0.72740984,   4.61115309,   0.10281675,   6.41103214,
   6.35624296,  -0.17049285,   3.10196795,   8.66592183,  -6.05453888,
  -4.71011913,   4.02217356,   2.38601362,  -6.75755755,   3.3782525,
  31.92711749,   6.84367112,  -1.32260207,   5.01736829,  -0.25230724,
  -5.51134689,   0.95291719,  -1.33023785,   4.49969143,  -3.02317381,
 -12.19852507,   1.98068523,  -4.42371799,  10.18056592,   5.3761648,
   3.22852814,   2.09192545,   2.03055822,   0.52973201,   3.2008753,
  11.00062386,   3.42846066,   6.68576608,   6.6889043,    6.92024322,
 -13.90881593,   5.67536269,   8.67959172, -11.20614195,  -4.10775693,
   2.92293051,  18.69005998,  -0.82595192,  -1.88598356,  -3.15187082])
b_ba2=bot_neuron(7,BA_2)